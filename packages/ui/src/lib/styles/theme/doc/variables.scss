$_cssvars: null;
$prefix: --doc;
$colors: (
	'gray-1': #ccc,
	'gray-2': #ddd,
	'gray-3': #999,
	'gray-4': #666,
	'gray-5': rgb(92, 91, 94),
	'color-white': rgba(255, 255, 255, 1),
	'color-black': rgba(0, 0, 0, 1),
	'color-light': rgba(244, 244, 244, 1),
	'color-dark': rgb(54, 49, 58),
	'danger': rgba(238, 9, 123, 1),
	'danger-light': rgb(251, 153, 183, 1),
	'danger-lighter': rgba(255, 235, 245, 1),
	'primary': rgb(106, 75, 179),
	'primary-light': rgb(181, 165, 252, 1),
	'primary-lighter': rgba(231, 219, 255, 1),
	'accent': rgb(0, 131, 136),
	'accent-light': rgb(71, 191, 185),
	'accent-lighter': rgb(215, 247, 240),
	'highlight': rgb(246, 226, 10),
	'highlight-light': rgb(251, 244, 162),
	'highlight-lighter': rgb(249, 243, 190),
	// 'shadow-color': var(#{$prefix}-color-dark),
	'shadow-light-color': 220 80% 80%,
	'shadow-color': 220 3% 15%,
	'shadow-strength': 1%,
);

$typography: (
	font-family-base: #{'HelveticaNeue',
	'Helvetica Neue',
	Helvetica,
	Arial,
	sans-serif},
	//
	font-size-base: var(#{$prefix}-fluid-0),
	font-size-h5: var(#{$prefix}-fluid-1),
	font-size-h4: var(#{$prefix}-fluid-2),
	font-size-h3: var(#{$prefix}-fluid-3),
	font-size-h2: var(#{$prefix}-fluid-4),
	font-size-h1: var(#{$prefix}-fluid-5),
	//// TODO: fix font-size-md - This font-size is not right
	font-size-md: var(#{$prefix}-fluid-0),
	font-size-lg: var(#{$prefix}-fluid-1),
	font-size-xl: var(#{$prefix}-fluid-2),
	font-size-xxl: var(#{$prefix}-fluid-3),
	// font-size-sm: calc(var(#{$prefix}-font-size-md) * var(#{$prefix}-s-1)),
	// font-size-xs: calc(var(#{$prefix}-font-size-md) * var(#{$prefix}-s-2)),
	// font-size-xxs: calc(var(#{$prefix}-font-size-md) * vars(#{$prefix}-s-3)),
	font-size-sm: var(#{$prefix}-300),
	font-size-xs: var(#{$prefix}-200),
	font-size-xxs: var(#{$prefix}-100),
	//
	font-weight-light: 100,
	font-weight-medium: 300,
	font-weight-bold: 500,
	font-color-base: var(#{$prefix}-color-dark),
);

$breakpoints: (
	bp-xs: 320,
	bp-sm: 768,
	bp-md: 992,
	bp-lg: 1200,
	bp-xl: 1920,
);

//==
// CUBE CSS-ish
// Adapted from: https://piccalil.li/tutorial/build-a-dashboard-with-cube-css/
//==

//== BASE SIZE
/// All calculations are based on this. Itâ€™s recommended that
/// you keep it at 1rem because that is the root font size. You
/// can set it to whatever you like and whatever unit you like.
///
$base-size: 1rem;

/// SIZE SCALE
/// This is a Major Third scale that powers all the utilities that
/// it is relevant for (font-size, margin, padding). All items are
/// calcuated off the base size, so change that and cascade across
/// your whole project.
///
$size-scale: (
	'100': $base-size * 0.6,
	'200': $base-size * 0.7,
	'300': $base-size * 0.8,
	'400': $base-size,
	'500': $base-size * 1.25,
	'600': $base-size * 1.6,
	'700': $base-size * 2,
	'900': $base-size * 3,
);

//== TYPOGRAPHIC SCALE
// See: https://piccalil.li/tutorial/improve-the-readability-of-the-content-on-your-website/
/*
* --ratio: 1.5;
* --s-5: calc(var(--s-4) / var(--ratio));
* --s-4: calc(var(--s-3) / var(--ratio));
* --s-3: calc(var(--s-2) / var(--ratio));
* --s-2: calc(var(--s-1) / var(--ratio));
* --s-1: calc(var(--s0) / var(--ratio));
* --s0: 1rem;
* --s1: calc(var(--s0) * var(--ratio));
* --s2: calc(var(--s1) * var(--ratio));
* --s3: calc(var(--s2) * var(--ratio));
* --s4: calc(var(--s3) * var(--ratio));
* --s5: calc(var(--s4) * var(--ratio));
*/

$scale: (
	ratio: 1.5,
	s-5: calc(var(#{$prefix}-s-4) / var(#{$prefix}-ratio)),
	s-4: calc(var(#{$prefix}-s-3) / var(#{$prefix}-ratio)),
	s-3: calc(var(#{$prefix}-s-2) / var(#{$prefix}-ratio)),
	s-2: calc(var(#{$prefix}-s-1) / var(#{$prefix}-ratio)),
	s-1: calc(var(#{$prefix}-s0) / var(#{$prefix}-ratio)),
	s0: $base-size,
	s1: calc(var(#{$prefix}-s0) * var(#{$prefix}-ratio)),
	s2: calc(var(#{$prefix}-s1) * var(#{$prefix}-ratio)),
	s3: calc(var(#{$prefix}-s2) * var(#{$prefix}-ratio)),
	s4: calc(var(#{$prefix}-s3) * var(#{$prefix}-ratio)),
	s5: calc(var(#{$prefix}-s4) * var(#{$prefix}-ratio)),
);

//== FLUID SCALE

/**
 * Source: https://utopia.fyi/blog/css-modular-scales/
 * Usage: 
 *  TODO: Doc + link to mixin generateModularScale
 *
 * body {
 *   font-size: var(#{$prefix}-fluid-0)
 * }
 *
 */

$modular-scale-steps: 1, 2, 3, 4, 5; // skip 0: it will be automatically generated
$modular-scale: (
	fluid-min-width: 320,
	fluid-max-width: 1920,
	fluid-min-size: 10,
	fluid-max-size: 16,
	fluid-min-ratio: 1.2,
	fluid-max-ratio: 1.3,
	fluid-screen: 100vw,
);

$layout: (
	gap: $base-size,
	//
	size-nul: 0,
	size-xxs: var(#{$prefix}-s-5),
	size-xs: var(#{$prefix}-s-4),
	size-sm: var(#{$prefix}-s-3),
	size-md: var(#{$prefix}-s-2),
	size-lg: var(#{$prefix}-s-1),
	size-xl: var(#{$prefix}-s0),
	size-xxl: var(#{$prefix}-s1),
	//
	sidebar-width-xxs: 10ch,
	sidebar-width-xs: 15ch,
	sidebar-width-sm: 20ch,
	sidebar-width-md: 25ch,
	sidebar-width-lg: 30ch,
	sidebar-width-xl: 35ch,
	sidebar-width-xxl: 40ch,
	//
	radius-nul: 0,
	radius-base: 3px,
	radius-lg: 5px,
	//
	border-width: 1px,
	z-index-reveal: 1,
	outline-offset: 0.25rem,
	outline-width: 2px,
	prev-offset-limit: calc(calc(var(#{$prefix}-outline-offset) + var(#{$prefix}-outline-width))),
	//
	// src: https://github.com/argyleink/open-props/blob/main/src/props.shadows.css
	// using shadow-3
	shadow: #{0 -1px 3px 0 hsl(
			var(#{$prefix}-shadow-color) / calc(var(#{$prefix}-shadow-strength) + 2%)
		),
	0 1px 2px -5px hsl(var(#{$prefix}-shadow-color) / calc(var(#{$prefix}-shadow-strength) + 2%)),
	0 2px 5px -5px hsl(var(#{$prefix}-shadow-color) / calc(var(#{$prefix}-shadow-strength) + 4%)),
	0 4px 12px -5px hsl(var(#{$prefix}-shadow-color) / calc(var(#{$prefix}-shadow-strength) + 5%)),
	0 12px 15px -5px hsl(var(#{$prefix}-shadow-color) / calc(var(#{$prefix}-shadow-strength) + 7%)),
	},
	shadow-light: #{0 -1px 3px 0 hsl(var(#{$prefix}-shadow-light-color) /
				calc(var(#{$prefix}-shadow-strength) + 2%)),
	0 1px 2px -5px hsl(var(#{$prefix}-shadow-light-color) / calc(var(#{$prefix}-shadow-strength) + 2%)),
	0 2px 5px -5px hsl(var(#{$prefix}-shadow-light-color) / calc(var(#{$prefix}-shadow-strength) + 4%)),
	0 4px 12px -5px hsl(var(#{$prefix}-shadow-light-color) /
				calc(var(#{$prefix}-shadow-strength) + 5%)),
	0 12px 15px -5px hsl(var(#{$prefix}-shadow-light-color) /
				calc(var(#{$prefix}-shadow-strength) + 7%)),
	},
);
