.l\:reveal {
	position: relative;
}

.l\:reveal.l\:stack {
	inline-size: unset;
	inline-size: calc(100% - 2 * var(#{$prefix}-gap));
}

.l\:reveal .layer {
	#{$prefix}-layer-top: calc(
		calc(2 * var(#{$prefix}-prev-offset-limit)) +
			calc(0.5em + calc(2 * var(#{$prefix}-current-size-plus))) +
			calc(2 * var(#{$prefix}-border-width))
	);
	position: absolute;
	top: var(#{$prefix}-layer-top);
	left: 0;
	right: 0;
	z-index: var(#{$prefix}-z-index-reveal);
	// TODO : fix color / bg color- cannot override for now
	color: var(#{$prefix}-current-color);
	background-color: var(#{$prefix}-current-bg-color);
}

.l\:reveal .end {
	justify-self: flex-end;
}
// TODO: set [inline/block] size according to alignment

@include min-width(bp-xxs) {
	.l\:reveal.bp\:xxs [class^='hidden:'] {
		border: unset;
		clip: unset;
		height: auto;
		margin: unset;
		overflow: hidden;
		padding: unset;
		position: unset;
		width: auto;
		white-space: normal;
	}
	.l\:reveal.bp\:xxs [class^='fixed:'] {
		position: unset;
		width: 100%; // TODO: use inline-size
		max-width: unset;
	}
	.l\:reveal.bp\:xxs.l\:stack:only-child {
		inline-size: unset;
		inline-size: var(#{$prefix}-current-sidebar-width);
	}
}
@include max-width(bp-xxs) {
	.l\:reveal.bp\:xxs [class^='fixed:'] {
		max-width: unset;
		// box-shadow: none; // TODO: decide
		background-color: inherit;
	}
}

@include min-width(bp-xs) {
	.l\:reveal.bp\:xs [class^='hidden:'] {
		border: unset;
		clip: unset;
		height: auto;
		margin: unset;
		overflow: hidden;
		padding: unset;
		position: unset;
		width: auto;
		white-space: normal;
	}
	.l\:reveal.bp\:xs [class^='fixed:'] {
		position: unset;
		width: 100%;
		max-width: unset;
		inline-size: unset;
	}
	.l\:reveal.bp\:xs.l\:stack:only-child {
		inline-size: unset;
		inline-size: var(#{$prefix}-current-sidebar-width);
	}
}
@include max-width(bp-xs) {
	.l\:reveal.bp\:xs [class^='fixed:'] {
		max-width: unset;
		// box-shadow: none; // TODO: decide
		background-color: inherit;
	}
}

@include min-width(bp-sm) {
	.l\:reveal.bp\:sm [class^='hidden:'] {
		border: unset;
		clip: unset;
		height: auto;
		margin: unset;
		overflow: hidden;
		padding: unset;
		position: unset;
		width: auto;
		white-space: normal;
	}
	.l\:reveal.bp\:sm [class^='fixed:'] {
		position: unset;
		width: 100%;
		max-width: unset;
		inline-size: unset;
	}
	.l\:reveal.bp\:sm.l\:stack:only-child {
		inline-size: unset;
		inline-size: var(#{$prefix}-current-sidebar-width);
	}
}
@include max-width(bp-sm) {
	.l\:reveal.bp\:sm [class^='fixed:'] {
		max-width: unset;
		// box-shadow: none; // TODO: decide
		background-color: inherit;
	}
}

@include min-width(bp-md) {
	.l\:reveal.bp\:md [class^='hidden:'] {
		border: unset;
		clip: unset;
		height: auto;
		margin: unset;
		overflow: hidden;
		padding: unset;
		position: unset;
		width: auto;
		white-space: normal;
	}
	.l\:reveal.bp\:md [class^='fixed:'] {
		position: unset;
		width: 100%;
		max-width: unset;
		inline-size: unset;
	}
	.l\:reveal.bp\:md.l\:stack:only-child {
		inline-size: unset;
		inline-size: var(#{$prefix}-current-sidebar-width);
	}
}
@include max-width(bp-md) {
	.l\:reveal.bp\:md [class^='fixed:'] {
		max-width: unset;
		// box-shadow: none; // TODO: decide
		background-color: inherit;
	}
}

@include min-width(bp-lg) {
	.l\:reveal.bp\:lg [class^='hidden:'] {
		border: unset;
		clip: unset;
		height: auto;
		margin: unset;
		overflow: hidden;
		padding: unset;
		position: unset;
		width: auto;
		white-space: normal;
	}
	.l\:reveal.bp\:lg [class^='fixed:'] {
		position: unset;
		width: 100%;
		max-width: unset;
		inline-size: unset;
	}
	.l\:reveal.bp\:lg.l\:stack:only-child {
		inline-size: unset;
		inline-size: var(#{$prefix}-current-sidebar-width);
	}
}
@include max-width(bp-lg) {
	.l\:reveal.bp\:lg [class^='fixed:'] {
		max-width: unset;
		// box-shadow: none; // TODO: decide
		background-color: inherit;
	}
}

@include min-width(bp-xl) {
	.l\:reveal.bp\:xl [class^='hidden:'] {
		border: unset;
		clip: unset;
		height: auto;
		margin: unset;
		overflow: hidden;
		padding: unset;
		position: unset;
		width: auto;
		white-space: normal;
	}
	.l\:reveal.bp\:xl [class^='fixed:'] {
		position: unset;
		width: 100%;
		max-width: unset;
		inline-size: unset;
	}
	.l\:reveal.bp\:xl.l\:stack:only-child {
		inline-size: unset;
		inline-size: var(#{$prefix}-current-sidebar-width);
	}
}
@include max-width(bp-xl) {
	.l\:reveal.bp\:xl [class^='fixed:'] {
		max-width: unset;
		// box-shadow: none; // TODO: decide
		background-color: inherit;
	}
}
