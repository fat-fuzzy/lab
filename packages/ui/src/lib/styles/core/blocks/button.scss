button {
	width: auto;
	font-size: var(#{$prefix}-font-size-ui);
	font-family: var(#{$prefix}-font-family-ui);
	font-weight: var(#{$prefix}-font-weight-ui);
	padding: var(#{$prefix}-current-size) var(#{$prefix}-current-size-plus); // Fluid padding will adjust according to closest size class (on self or ancestor)
	border-radius: var(#{$prefix}-radius-base);
}

//== Button default colors

button {
	color: currentColor;
	background-color: var(#{$prefix}-current-bg-color);
	border: 1px solid var(#{$prefix}-current-gray);
}

button:not(:disabled):hover {
	background-color: var(#{$prefix}-color-gray-2);
}

button:disabled {
	color: currentColor;
	background-color: var(#{$prefix}-current-gray);
}

button:not(:disabled):active {
	color: var(#{$prefix}-color-dark);
	background-color: var(#{$prefix}-color-gray-3);
}

button:not(:disabled):hover {
	cursor: pointer;
}

//== Button theme colors

.primary {
	color: var(#{$prefix}-current-color-alt);
	border-color: var(#{$prefix}-current-primary);
	background-color: var(#{$prefix}-current-primary);
}
button.outline {
	color: inherit;
	background-color: inherit;
	border-color: var(#{$prefix}-current-primary);
}
button.outline:not(:disabled):hover,
button.primary:not(:disabled):hover {
	color: var(#{$prefix}-color-dark);
	background-color: var(#{$prefix}-color-primary-lighter);
}
button.primary:not(:disabled):active,
button.outline:not(:disabled):active {
	color: var(#{$prefix}-color-dark);
	background-color: var(#{$prefix}-current-primary-light);
}

//== Accent  color
.accent {
	color: var(#{$prefix}-color-light);
	border-color: var(#{$prefix}-current-accent);
	background-color: var(#{$prefix}-current-accent);
	outline-color: var(#{$prefix}-current-accent);
}
button.outline.accent {
	color: inherit;
	background-color: inherit;
	border-color: var(#{$prefix}-current-accent);
}
button.accent:not(:disabled):hover,
.outline.accent:not(:disabled):hover {
	color: var(#{$prefix}-color-dark);
	background-color: var(#{$prefix}-color-accent-lighter);
}
button.accent:not(:disabled):active,
.outline.accent:not(:disabled):active {
	color: var(#{$prefix}-color-dark);
	background-color: var(#{$prefix}-color-accent-light);
}

//== Highlight  color

.highlight {
	border-color: var(#{$prefix}-current-highlight);
	background-color: var(#{$prefix}-current-highlight);
	color: var(#{$prefix}-color-dark);
	outline-color: var(#{$prefix}-current-highlight);
}
button.outline.highlight {
	color: inherit;
	background-color: inherit;
	border-color: var(#{$prefix}-current-highlight);
}
.light button.outline.highlight {
	border-color: var(#{$prefix}-color-highlight-dark);
}
button.highlight:not(:disabled):hover,
button.outline.highlight:not(:disabled):hover {
	color: var(#{$prefix}-color-dark);
	background-color: var(#{$prefix}-color-highlight-lighter);
}
button.highlight:not(:disabled):active,
button.outline.highlight:not(:disabled):active {
	color: var(#{$prefix}-color-dark);
	background-color: var(#{$prefix}-color-highlight-light);
}

//== Bare buttons (no background, no border)

.bare {
	font-size: var(#{$prefix}-font-size-ui);
	font-family: var(#{$prefix}-font-family-ui);
	font-weight: var(#{$prefix}-font-weight-ui);
	color: var(#{$prefix}-current-primary);
	background-color: transparent;
	border: none;
	padding: var(#{$prefix}-current-size);
}

.bare:hover {
	text-decoration: underline;
}

//== Toggle  colors

[aria-pressed='true'],
[aria-pressed='true']:active {
	color: var(#{$prefix}-color-dark);
	background-color: var(#{$prefix}-current-primary-light);
	box-shadow: var(#{$prefix}-shadow-inset);
}
[aria-pressed='true']:hover,
[aria-pressed='false']:hover {
	color: var(#{$prefix}-color-dark);
	background-color: var(#{$prefix}-current-primary-lighter);
}
[aria-pressed='false']:hover {
	box-shadow: var(#{$prefix}-shadow);
}
[aria-pressed='false']:active {
	background-color: var(#{$prefix}-current-bg-color);
}
.outline[aria-pressed='true'],
.outline[aria-pressed='true']:active {
	background-color: var(#{$prefix}-current-primary-light);
}
.accent[aria-pressed='true'],
.accent[aria-pressed='true']:active {
	color: var(#{$prefix}-color);
	background-color: var(#{$prefix}-current-accent-light);
}
.accent[aria-pressed='true']:hover,
.accent[aria-pressed='false']:hover {
	background-color: var(#{$prefix}-current-accent-lighter);
}
.accent.outline[aria-pressed='true'],
.accent.outline[aria-pressed='true']:active {
	background-color: var(#{$prefix}-current-accent-light);
}
.highlight[aria-pressed='true'],
.highlight[aria-pressed='true']:active {
	color: var(#{$prefix}-color);
	background-color: var(#{$prefix}-current-highlight-light);
}
.highlight[aria-pressed='true']:hover,
.highlight[aria-pressed='false']:hover {
	background-color: var(#{$prefix}-current-highlight-lighter);
}
.highlight.outline[aria-pressed='true'],
.highlight.outline[aria-pressed='true']:active {
	background-color: var(#{$prefix}-current-highlight-light);
}

.bare[aria-pressed='true']:hover,
.bare[aria-pressed='false']:hover {
	box-shadow: var(#{$prefix}-shadow);
}

.bare[aria-pressed='true'],
.bare[aria-pressed='true']:active {
	color: var(#{$prefix}-color-dark);
	background-color: var(#{$prefix}-current-primary-lighter);
}

//== Alignment

.start > button {
	text-align: start;
}
.end > button {
	text-align: end;
}

// == Button sizes according to context
// TODO: check container queries for this / fix: use current-font-size
.xxs button,
.xs button {
	font-size: var(#{$prefix}-font-size-xs);
}

.sm button {
	font-size: var(#{$prefix}-font-size-sm);
}

.md button {
	font-size: var(#{$prefix}-font-size-md);
}

.lg button {
	font-size: var(#{$prefix}-font-size-lg);
}

.xxl button,
.xl button {
	font-size: var(#{$prefix}-font-size-xl);
}

// == Override button size according to context (CSS rules above) on a per-button basis
button.xxs,
button.xs {
	font-size: var(#{$prefix}-font-size-xs);
}

button.sm {
	font-size: var(#{$prefix}-font-size-sm);
}

button.md {
	font-size: var(#{$prefix}-font-size-md);
}

button.lg {
	font-size: var(#{$prefix}-font-size-lg);
}

button.xxl,
button.xl {
	font-size: var(#{$prefix}-font-size-xl);
}
