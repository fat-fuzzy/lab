[class^='l:sidebar'] {
	display: flex;
	flex-wrap: wrap;
	gap: var(--gap);
}

/* NOTE: The following declaration assume that the markup declares .main before .side */
[class^='l:sidebar'].start {
	flex-direction: row;
}
// TODO: not sure this rule is necessary
[class^='l:sidebar'].end {
	flex-direction: row-reverse;
}
// TODO: not sure this rule is necessary
[class^='l:sidebar'].end\:reverse {
	flex-wrap: wrap-reverse;
}

main > [class^='l:sidebar'] {
	padding: var(--gap);
}

.l\:main {
	flex-basis: 0;
	flex-grow: 999;
	// ~ min-width in horizontal\:tb writing mode: if (width < 70%) -> wrap
	min-inline-size: 70%;

	> main {
		block-size: 100%;
	}
}

.l\:main\:30 {
	min-inline-size: 30%;
}

.l\:main\:40 {
	min-inline-size: 40%;
}

.l\:main\:50 {
	min-inline-size: 50%;
}

.l\:main\:60 {
	min-inline-size: 60%;
}

.l\:main\:70 {
	min-inline-size: 70%;
}

.l\:main\:80 {
	min-inline-size: 80%;
}

// adjusts to width of contents
[class^='l:side'] {
	flex-grow: 1;
	flex-basis: var(--current-side-size);
}

// adjusts to width of sibling (main)
[class^='l:side'].shrink {
	flex-grow: 0;
	flex-basis: fit-content;
}

[class^='l:side:'] nav {
	height: auto;
	max-height: 35vh;
	overflow-y: auto;
}

@media screen and (min-width: 935px) {
	[class^='l:side:'] nav {
		height: auto;
		max-height: unset;
	}
}
