form {
	background-color: inherit;
}

form * {
	font-family: var(--font-family-ui);
}

label,
.feedback {
	display: block;
}

label,
legend,
.form\:element {
	font-weight: var(--font-weight-ui);
	padding-inline-start: 0;
	padding-inline-end: 0;
	background-color: inherit;
}

.input-group {
	width: 100%;
}

.input-group label {
	display: flex;
	justify-content: space-between;
}

input,
select,
textarea {
	border: 1px solid var(--color-gray-1);
	border-radius: var(--radius-base);
	color: var(--color-dark);
	background: var(--color-white);
}

label > input {
	max-width: 100%;
}

* + .feedback {
	margin-block-start: calc(var(--outline-offset) + 2px);
}

[disabled] {
	color: var(--color-gray-1);
	cursor: not-allowed;
}

.primary {
	input,
	select,
	textarea {
		accent-color: var(--current-primary);
	}
}

.accent {
	input,
	select,
	textarea {
		accent-color: var(--current-accent);
	}
}

.highlight {
	input,
	select,
	textarea {
		accent-color: var(--current-highlight);
	}
}

// Manage color on .bare labels adn inputs

label.bare.primary {
	color: var(--current-primary);
}
label.bare.accent {
	color: var(--current-accent);
}
label.bare.highlight {
	color: var(--current-highlight-dark);
}
label.bare.primary > input {
	border-color: var(--current-primary);
	background-color: unset;
}
label.bare.accent > input {
	border-color: var(--current-accent);
	background-color: unset;
}
label.bare.highlight > input {
	border-color: var(--current-highlight-dark);
	background-color: unset;
}
.bare.primary > input:hover {
	color: var(--color-dark);
	background-color: var(--current-primary-light);
}
.bare.accent > input:hover {
	color: var(--current-dark);
	background-color: var(--current-accent-light);
}
.bare.highlight > input:hover {
	color: var(--color-dark);
	background-color: var(--current-highlight-lighter);
}

// TODO : cleanup - use "current" size values
legend {
	font-size: var(--current-font-size);
	margin-block-end: var(--current-size);
}

input,
select,
textarea {
	font-size: var(--current-font-size);
	padding: var(--current-size) var(--current-size-plus);
}

label {
	font-size: var(--current-font-size);
}

label > [type='file'] {
	color: var(--color-dark); // TODO: move to color management - fixes iOS
	font-size: var(--current-font-size-minus);
	padding: var(--current-size) var(--current-size) var(--current-size-minus);
	display: flex;
	align-items: center;
}

.feedback {
	font-size: var(--current-font-size-minus);
	min-height: calc(var(--current-font-size-minus) * var(--ratio));
}

// Display range input step labels

label > input[type='range'][list='markers'] + datalist {
	display: flex;
	justify-content: space-between;
	padding: 0 var(--current-size);
}

label > input[type='range'][list='markers'] + datalist > option {
	font-size: var(--current-font-size-minus);
	font-weight: var(--font-weight-body);
	padding: 0;
}

label > input[type='range']:not([list]) + datalist > option {
	display: none;
}

label[class*='l:stack'] > input[type='range'] {
	margin-block-start: 0;
}
