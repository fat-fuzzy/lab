label,
.feedback {
	display: block;
}

label,
legend {
	font-weight: 500;
	padding-left: 0;
	padding-right: 0;
}

input,
button,
select,
textarea {
	border: 1px solid getVar(gray-1);
	border-radius: getVar(radius-base);
	color: currentColor;
}

* + .feedback {
	margin-block-start: calc(getVar(outline-offset) + 2px);
}

[disabled] {
	color: getVar(gray-1);
	cursor: not-allowed;
}

form.xxs,
form.xs {
	legend {
		font-size: getVar(font-size-sm);
	}

	legend + * {
		margin-block-start: getVar(margin-block-xs);
	}

	input,
	button,
	select,
	textarea {
		font-size: getVar(font-size-xs);
		padding: getVar(padding-xs) getVar(padding-sm);
	}

	label {
		font-size: getVar(font-size-xs);
	}

	.feedback {
		font-size: getVar(font-size-xxs);
		min-height: calc(getVar(font-size-xxs) * getVar(ratio));
	}

	.link {
		padding: getVar(padding-xs);
	}

	.link,
	.link + *,
	input + .feedback {
		margin-block-start: getVar(margin-block-xxs);
	}
}

form.xxs {
	legend + * {
		margin-block-start: getVar(margin-block-xxs);
	}
	input[type='range'] {
		font-size: getVar(font-size-xs);
		padding: calc(getVar(padding-xxs) / getVar(ratio));
		margin-block-start: calc(getVar(margin-sm) * getVar(ratio));
		margin-block-end: calc(getVar(margin-md) * getVar(ratio));
	}
}

form.sm {
	legend {
		font-size: getVar(font-size-h5);
	}

	legend + * {
		margin-block-start: getVar(margin-block-sm);
	}

	input,
	button,
	select,
	textarea {
		font-size: getVar(font-size-sm);
		padding: getVar(padding-sm) getVar(padding-md);
	}

	label {
		font-size: getVar(font-size-sm);
	}

	.feedback {
		font-size: getVar(font-size-xs);
		min-height: calc(getVar(font-size-xs) * getVar(ratio));
	}

	.link {
		padding: getVar(padding-sm);
	}

	.link,
	.link + *,
	input + .feedback {
		margin-block-start: getVar(margin-block-xs);
	}
}

form.md {
	legend {
		font-size: getVar(font-size-h4);
	}

	legend + * {
		margin-block-start: getVar(margin-block-md);
	}

	input,
	button,
	select,
	textarea {
		font-size: getVar(font-size-md);
		padding: getVar(padding-md) getVar(padding-lg);
	}

	label {
		font-size: getVar(font-size-md);
	}

	.feedback {
		font-size: getVar(font-size-sm);
		min-height: calc(getVar(font-size-sm) * getVar(ratio));
	}

	.link {
		padding: getVar(padding-md);
	}

	.link,
	.link + *,
	input + .feedback {
		margin-block-start: getVar(margin-block-sm);
	}
}

form.lg {
	legend {
		font-size: getVar(font-size-h3);
	}

	legend + * {
		margin-block-start: getVar(margin-block-lg);
	}

	input,
	button,
	select,
	textarea {
		font-size: getVar(font-size-lg);
		padding: getVar(padding-lg) getVar(padding-xl);
	}

	label {
		font-size: getVar(font-size-lg);
	}

	.feedback {
		font-size: getVar(font-size-md);
		min-height: calc(getVar(font-size-md) * getVar(ratio));
	}

	.link {
		padding: getVar(padding-lg);
	}

	.link,
	.link + *,
	input + .feedback {
		margin-block-start: getVar(margin-block-md);
	}
}

form.xl {
	legend {
		font-size: getVar(font-size-h2);
	}

	legend + * {
		margin-block-start: getVar(margin-block-xl);
	}

	input,
	button,
	select,
	textarea {
		font-size: getVar(font-size-xl);
		padding: getVar(padding-xl) getVar(padding-xxl);
	}

	label {
		font-size: getVar(font-size-xl);
	}

	.feedback {
		font-size: getVar(font-size-lg);
		min-height: calc(getVar(font-size-lg) * getVar(ratio));
	}

	.link {
		padding: getVar(padding-xl);
	}

	.link,
	.link + *,
	input + .feedback {
		margin-block-start: getVar(margin-block-lg);
	}
}
